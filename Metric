package com.example.axonmetricsdemo.config;

import com.codahale.metrics.MetricRegistry;
import com.codahale.metrics.servlets.MetricsServlet;
import org.axonframework.config.Configurer;
import org.axonframework.config.DefaultConfigurer;
import org.axonframework.config.Configuration;
import org.axonframework.metrics.MessageCountingMonitor;
import org.springframework.boot.web.servlet.ServletRegistrationBean;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration as SpringConfiguration;

@SpringConfiguration
public class AxonMetricsConfig {

    // 2a. Metric registry bean
    @Bean
    public MetricRegistry metricRegistry() {
        return new MetricRegistry();
    }

    // 2b. Wire Axon to the Dropwizard MetricRegistry
    @Bean
    public Configuration axonConfiguration(MetricRegistry metricRegistry) {
        Configurer configurer = DefaultConfigurer.defaultConfiguration()
            .configureMessageMonitor((c, componentType, componentName) ->
                MessageCountingMonitor.buildMonitor(componentName, metricRegistry)
            );

        Configuration configuration = configurer.buildConfiguration();
        configuration.start();
        return configuration;
    }

    // 2c. Expose metrics over HTTP at /metrics
    @Bean
    public ServletRegistrationBean<MetricsServlet> metricsServlet(MetricRegistry metricRegistry) {
        return new ServletRegistrationBean<>(new MetricsServlet(metricRegistry), "/metrics/*");
    }
}
